/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagement}"
    id 'java'
}

group 'fr.dademo.supervision.job.task.light'
archivesBaseName = 'dademo-supervision-job-task-light'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

dependencies {

    implementation project(':modules:dependencies:tools:generic_tools')
    implementation project(':modules:supervision:dependencies:backends:model')

    runtimeOnly project(':modules:supervision:dependencies:backends:postgresql')

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-task'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.amqp:spring-amqp'
    implementation 'org.springframework.kafka:spring-kafka'

    // Other libraries
    implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApiVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonCoreVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonCoreVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonCoreVersion}"
    implementation "org.apache.commons:commons-compress:${apacheCommonsCompressVersion}"
    runtimeOnly "org.tukaani:xz:${xzJavaVersion}"
    implementation "com.google.code.findbugs:jsr305:${findBugsJsr305Version}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:rabbitmq'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

